[{"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\index.js":"1","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\App.js":"2","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\layout\\Header.js":"3","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\layout\\footer.js":"4","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\home.js":"5","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\layout\\MetaData.js":"6","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\store.js":"7","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\reducer\\productReducer.js":"8","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\constants\\productConstants.js":"9","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\actions\\productActions.js":"10","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\Home.js":"11","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\layout\\Footer.js":"12","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\product\\Product.js":"13","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\layout\\Loader.js":"14","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\product\\ProductDetails.js":"15","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\layout\\Search.js":"16","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\reducer\\userReducer.js":"17","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\constants\\userconstants.js":"18","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\user\\register.js":"19","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\actions\\userActions.js":"20","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\user\\Register.js":"21","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\user\\Login.js":"22","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\user\\Profile.js":"23","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\route\\ProtectedRoute.js":"24","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\user\\UpdateProfile.js":"25","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\user\\UpdatePassword.js":"26","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\user\\ForgotPassword.js":"27","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\user\\NewPassword.js":"28","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\reducer\\cartReducers.js":"29","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\constants\\cartConstants.js":"30","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\actions\\cartActions.js":"31","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\cart\\Cart.js":"32","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\cart\\Shipping.js":"33","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\cart\\CheckoutSteps.js":"34","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\cart\\ConfirmOrder.js":"35","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\cart\\Payment.js":"36","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\reducer\\orderReducers.js":"37","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\constants\\orderConstants.js":"38","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\actions\\orderActions.js":"39","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\order\\ListOrders.js":"40"},{"size":662,"mtime":1612644133662,"results":"41","hashOfConfig":"42"},{"size":3066,"mtime":1613106474748,"results":"43","hashOfConfig":"42"},{"size":2613,"mtime":1612973481837,"results":"44","hashOfConfig":"42"},{"size":321,"mtime":1611738290000,"results":"45","hashOfConfig":"42"},{"size":1652,"mtime":1611737459866,"results":"46","hashOfConfig":"42"},{"size":300,"mtime":1611682530734,"results":"47","hashOfConfig":"42"},{"size":1315,"mtime":1612889618473,"results":"48","hashOfConfig":"42"},{"size":1788,"mtime":1612442456297,"results":"49","hashOfConfig":"42"},{"size":425,"mtime":1611772833789,"results":"50","hashOfConfig":"42"},{"size":1574,"mtime":1612886796969,"results":"51","hashOfConfig":"42"},{"size":3477,"mtime":1612899692447,"results":"52","hashOfConfig":"42"},{"size":328,"mtime":1612977170151,"results":"53","hashOfConfig":"42"},{"size":1171,"mtime":1612443512072,"results":"54","hashOfConfig":"42"},{"size":180,"mtime":1611769660820,"results":"55","hashOfConfig":"42"},{"size":6233,"mtime":1612973852640,"results":"56","hashOfConfig":"42"},{"size":1031,"mtime":1612269467877,"results":"57","hashOfConfig":"42"},{"size":4324,"mtime":1612698845252,"results":"58","hashOfConfig":"42"},{"size":1491,"mtime":1612698578554,"results":"59","hashOfConfig":"42"},{"size":3102,"mtime":1612541102667,"results":"60","hashOfConfig":"42"},{"size":5579,"mtime":1612887396554,"results":"61","hashOfConfig":"42"},{"size":3102,"mtime":1612541102667,"results":"62","hashOfConfig":"42"},{"size":3126,"mtime":1612730672039,"results":"63","hashOfConfig":"42"},{"size":1773,"mtime":1612646099763,"results":"64","hashOfConfig":"42"},{"size":739,"mtime":1612647526842,"results":"65","hashOfConfig":"42"},{"size":3245,"mtime":1612690526852,"results":"66","hashOfConfig":"42"},{"size":3117,"mtime":1612694040916,"results":"67","hashOfConfig":"42"},{"size":2288,"mtime":1612697228661,"results":"68","hashOfConfig":"42"},{"size":2900,"mtime":1612701662340,"results":"69","hashOfConfig":"42"},{"size":1203,"mtime":1612728181578,"results":"70","hashOfConfig":"42"},{"size":154,"mtime":1612727483285,"results":"71","hashOfConfig":"42"},{"size":1137,"mtime":1612727853873,"results":"72","hashOfConfig":"42"},{"size":4119,"mtime":1612897208076,"results":"73","hashOfConfig":"42"},{"size":4955,"mtime":1612785510601,"results":"74","hashOfConfig":"42"},{"size":1854,"mtime":1612804602615,"results":"75","hashOfConfig":"42"},{"size":3876,"mtime":1612817056477,"results":"76","hashOfConfig":"42"},{"size":5345,"mtime":1612816677886,"results":"77","hashOfConfig":"42"},{"size":1622,"mtime":1612889702977,"results":"78","hashOfConfig":"42"},{"size":376,"mtime":1612864509490,"results":"79","hashOfConfig":"42"},{"size":1485,"mtime":1612894734465,"results":"80","hashOfConfig":"42"},{"size":2896,"mtime":1612894895861,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"puktcr",{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"84"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":2,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"155","usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\index.js",[],["175","176"],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\App.js",["177"],"import { useEffect, useState } from 'react'\nimport Header from './components/layout/Header';\nimport Footer from './components/layout/Footer';\nimport Home from './components/Home';\nimport ProductDetails from './components/product/ProductDetails'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Register from './components/user/Register';\nimport { loadUser } from './actions/userActions';\nimport store from './store';\nimport Login from './components/user/Login';\nimport Profile from './components/user/Profile';\nimport ProtectedRoute from './components/route/ProtectedRoute';\nimport UpdateProfile from './components/user/UpdateProfile';\nimport UpdatePassword from './components/user/UpdatePassword';\nimport ForgotPassword from './components/user/ForgotPassword';\nimport NewPassword from './components/user/NewPassword';\nimport Cart from './components/cart/Cart'\nimport Shipping from './components/cart/Shipping'\nimport ConfirmOrder from './components/cart/ConfirmOrder';\nimport Payment from './components/cart/Payment';\nimport axios from 'axios'\nimport ListOrders from './components/order/ListOrders'\nimport { useDispatch, useSelector } from 'react-redux';\n \n//payment\nimport { Elements } from '@stripe/react-stripe-js'\nimport { loadStripe } from '@stripe/stripe-js'\n\n\nfunction App() {\n\n  const [stripeApiKey, setStripeApiKey] = useState('');\n\n  useEffect(() => {\n    store.dispatch(loadUser())\n\n    async function getStripApiKey() {\n      const { data } = await axios.get('/api/v1/stripeapi')\n      setStripeApiKey(data.stripeApiKey)\n    }\n\n    getStripApiKey()\n  }, [])\n\n  const { user, isAuthenticated, loading } = useSelector(state => state.auth)  \n\n  return (\n     <Router>\n         <div className=\"App\">\n      < Header />\n      <div className=\"container container-fluid\">\n       \n      <Route path=\"/\" component={Home} exact />\n      <Route path=\"/search/:keyword\" component={Home} exact />\n      <Route path=\"/product/:id\" component={ProductDetails} exact />\n\n      <Route path=\"/cart\" component={Cart} exact />\n      <ProtectedRoute path=\"/shipping\" component={Shipping} exact  />\n      <ProtectedRoute path=\"/order/confirm\" component={ConfirmOrder} />\n      {stripeApiKey &&   \n        <Elements stripe={loadStripe(stripeApiKey)}>\n          <ProtectedRoute path=\"/payment\" component={Payment} />\n            </Elements> \n      }\n\n      \n\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/register\" component={Register} />\n      <Route path=\"/password/forgot\" component={ForgotPassword} />\n      <Route path=\"/password/reset/:token\" component={NewPassword} />\n      <ProtectedRoute path=\"/me\" component={Profile} exact  />\n      <ProtectedRoute path=\"/me/update\" component={UpdateProfile} exact  />\n      <ProtectedRoute path=\"/password/update\" component={UpdatePassword} exact  />\n      <ProtectedRoute path=\"/orders/me\" component={ListOrders} exact  />\n\n    </div>\n      {!loading && (!isAuthenticated || user.role !== 'admin') && (\n      <Footer />\n      \n      )} \n  </div>\n</Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\layout\\Header.js",["178"],"import React, { Fragment } from 'react';\r\nimport '../../App.css';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport Search from './Search';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../actions/userActions';\r\nimport { BiCart }  from 'react-icons/bi';\r\nimport logo1 from './images/pet6.png';\r\n\r\n\r\n\r\nconst Header = () => {\r\n\r\n  const alert = useAlert(); \r\n  const dispatch = useDispatch();\r\n\r\n  const { user, loading } = useSelector(state => state.auth);\r\n  const { cartItems } = useSelector(state => state.cart) \r\n\r\n    const logoutHandler = () =>{\r\n      dispatch(logout());\r\n      alert.success('Logged out successfully.')\r\n    }\r\n\r\n    return (\r\n       <Fragment>\r\n           <nav className=\"navbar row\">\r\n           <div className=\"col-12 col-md-3\">  \r\n           <div className=\"navbar-brand\"> \r\n          <Link to=\"/\">\r\n           <img src={logo1} width=\"190\"  />   \r\n           </Link>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\r\n              <Route render={({ history }) => <Search history={history} />} />\r\n      </div>\r\n\r\n      <div className=\"col-12 col-md-3 mt-5 mt-md-0 text-center\">\r\n       <Link to=\"/cart\" style={{ textDecoration: 'none' }} > \r\n        <span id=\"cart\" className=\"ml-3\"><BiCart  />  </span>\r\n        <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\r\n        </Link>\r\n         \r\n        {user ? (\r\n          <div className=\"ml-4 dropdown d-inline\">\r\n            <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\"\r\n            type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" \r\n            aria-haspopup=\"true\" aria-expanded=\"false\">\r\n    \r\n                 <span>{user && user.name }</span>              \r\n          </Link>\r\n\r\n          <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\r\n             \r\n            {user && user.role === 'admin' && (\r\n              <Link className=\"dropdown-item\" to=\"/dashboard\"> Dashboard</Link> \r\n            )}\r\n            <Link className=\"dropdown-item\" to=\"/orders/me\"> Orders</Link>\r\n              <Link className=\"dropdown-item\" to=\"/me\">Profile</Link>\r\n              <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\r\n                Logout\r\n              </Link>\r\n \r\n          </div>\r\n          </div>\r\n        ) : !loading && <Link to=\"/login\" className=\"btn\" id=\"login_btn\">Login</Link>}\r\n        \r\n\r\n      </div>\r\n    </nav>    \r\n       </Fragment>\r\n       \r\n       \r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\layout\\footer.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\home.js",["179","180","181","182","183","184"],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\layout\\MetaData.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\store.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\reducer\\productReducer.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\Home.js",["185"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport MetaData from './layout/MetaData';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProducts } from '../actions/productActions'; \r\nimport Loader from './layout/Loader';\r\nimport { useAlert } from 'react-alert'\r\nimport Product from './product/Product';\r\nimport Pagination from 'react-js-pagination';\r\n\r\nconst Home = ({ match }) => {\r\n\r\n  const [currentPage, setCurrentPage] = useState(1)    \r\n  const alert = useAlert();\r\n  const  dispatch =  useDispatch();\r\n  const [category, setCategory] = useState('')\r\n  const [rating, setRating] = useState(0)\r\n  \r\n  const categories =[\r\n    'hayopka!'\r\n    \r\n  ]\r\n\r\n  const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products) \r\n\r\n  const keyword = match.params.keyword\r\n\r\n  useEffect(() => { \r\n    if(error) {      \r\n     return alert.error(error)\r\n    }\r\n    dispatch(getProducts(keyword, currentPage, category, rating));\r\n  },\r\n   [ dispatch, alert, error, keyword, currentPage, category, rating])  \r\n  \r\n    function setCurrentPageNo(pageNumber) {\r\n      setCurrentPage(pageNumber)\r\n    }\r\n\r\n    let count = productsCount;\r\n    if(keyword) {\r\n      count = filteredProductsCount\r\n    }\r\n\r\n  return (\r\n            <Fragment>\r\n              {loading ? <Loader /> : (\r\n                <Fragment>\r\n                   <MetaData title={'Buy Best Products Online'} />\r\n            <h1 id=\"products_heading\">Latest Products</h1>\r\n           \r\n            <section id=\"products\" className=\"container mt-5\">\r\n            <div className=\"row\">\r\n           <hr className=\"my-5\" />\r\n            <div className=\"mt-5\">\r\n                <h4 className=\"mb-3\">\r\n                  Categories\r\n                </h4>\r\n                <ul className=\"pl-0\">\r\n                {categories.map(category =>(\r\n                  <li\r\n                      style={{cursor: 'pointer',\r\n                              listStyleType: 'none'\r\n                            }}\r\n                            key={category}\r\n                            onClick={() => setCategory(category)\r\n                            }\r\n                              >\r\n                                {category}\r\n                    </li>\r\n                ))}\r\n                </ul>\r\n            </div>\r\n            {products && products.map(product => (\r\n         <Product key={product._id} product={product}\r\n         col={3}\r\n         />\r\n         ))}       \r\n          </div>     \r\n                </section>\r\n\r\n                    {resPerPage <= count && (\r\n                            <div className=\"d-flex justify-content-center mt-5\">\r\n                            <Pagination\r\n                             activePage={currentPage}\r\n                            itemsCountPerPage={resPerPage} \r\n                            totalItemsCount ={productsCount}\r\n                            onChange={setCurrentPageNo}\r\n                            nextPageText={'Next'} \r\n                            prevPageText={'Prev'}\r\n                            firstPageText={'First'}\r\n                            lastPageText={'Last'}\r\n                            itemClass=\"page-item\" \r\n                            linkClass=\"page-link\"\r\n                            />\r\n                              </div>\r\n                    )}\r\n                </Fragment>\r\n                )}  \r\n        </Fragment>  \r\n    )\r\n}\r\n \r\nexport default Home\r\n","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\layout\\Footer.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\product\\Product.js",["186"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Product = ({ product, col }) => {\r\n    return (\r\n        \r\n           <div className={ `col-sm-12 col-md-6 col-lg-${col} my-3`}>\r\n         <div className=\"card p-3 rounded\">\r\n           <img\r\n             className=\"card-img-top mx-auto\"\r\n             src={product.images[0].url}\r\n           />\r\n           <div className=\"card-body d-flex flex-column\"> \r\n             <h5 className=\"card-title\">\r\n               <Link to={`/product/${product._id}`}>{product.name}</Link>\r\n             </h5>\r\n             <div className=\"ratings mt-auto\">\r\n               <div className=\"rating-outer\">\r\n                 <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\r\n               </div>\r\n               <span id=\"no_of_reviews\">({product.numOfReviews}Reviews)</span>\r\n             </div>\r\n             <p className=\"card-text\">₱{product.price}</p>\r\n             <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\r\n           </div>\r\n         </div> \r\n       </div>  \r\n        \r\n    )\r\n}\r\n\r\nexport default Product\r\n","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\layout\\Loader.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\product\\ProductDetails.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\layout\\Search.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\reducer\\userReducer.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\constants\\userconstants.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\user\\register.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\actions\\userActions.js",["187","188","189","190","191","192"],"import axios from 'axios'\r\nimport {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_USER_REQUEST ,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAIL,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n    UPDATE_PASSWORD_REQUEST,\r\n    UPDATE_PASSWORD_SUCCESS,\r\n    UPDATE_PASSWORD_RESET,\r\n    UPDATE_PASSWORD_FAIL,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAIL,\r\n    NEW_PASSWORD_REQUEST,\r\n    NEW_PASSWORD_SUCCESS,\r\n    NEW_PASSWORD_FAIL,\r\n    UPDATE_PROFILE_REQUEST,\r\n    UPDATE_PROFILE_SUCCESS,\r\n    UPDATE_PROFILE_FAIL,\r\n    UPDATE_PROFILE_RESET,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/userconstants';\r\n\r\n//login\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: LOGIN_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/login', {email, password}, config)\r\n\r\n        dispatch({ type: LOGIN_SUCCESS,\r\n                   payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n     //Register user\r\nexport const register = (userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: REGISTER_USER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/register', userData, config)\r\n\r\n        dispatch({\r\n             type: REGISTER_USER_SUCCESS,\r\n                   payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REGISTER_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n//Load user\r\nexport const loadUser = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: LOAD_USER_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/v1/me')\r\n\r\n        dispatch({\r\n             type: LOAD_USER_SUCCESS,\r\n             payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOAD_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n //Update profile\r\n export const updateProfile = (userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PROFILE_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/me/update', userData, config)\r\n\r\n        dispatch({\r\n             type: UPDATE_PROFILE_SUCCESS,\r\n                   payload: data.success    \r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PROFILE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n \r\n//Update password\r\nexport const updatePassword = (passwords) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PASSWORD_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/v1/password/update', passwords, config)\r\n\r\n        dispatch({\r\n             type: UPDATE_PROFILE_SUCCESS,\r\n                   payload: data.success    \r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PROFILE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n//FORGOT password\r\nexport const forgotPassword = (email) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: FORGOT_PASSWORD_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/password/forgot', email, config)\r\n\r\n        dispatch({\r\n             type: FORGOT_PASSWORD_SUCCESS,\r\n                   payload: data.message  \r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    console.log(error);\r\n    }\r\n}\r\n\r\n//reset password\r\nexport const resetPassword = (token, passwords) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_PASSWORD_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/password/reset/${token}`, passwords, config)\r\n\r\n        dispatch({\r\n             type: NEW_PASSWORD_SUCCESS,\r\n                   payload: data.success  \r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n//Logout user\r\nexport const logout = () => async (dispatch) => {\r\n    try {\r\n\r\n        const { data } = await axios.get('/api/v1/logout')\r\n\r\n        dispatch({\r\n             type: LOGOUT_SUCCESS,   \r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOAD_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}  \r\n\r\n//clear errors\r\n     export const clearErrors = () => async (dispatch) => {\r\n         dispatch({\r\n                type: CLEAR_ERRORS\r\n         })\r\n     }\r\n\r\n     ","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\user\\Register.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\user\\Login.js",["193"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../layout/Loader';\r\nimport MetaData from '../layout/MetaData';\r\nimport { Link } from 'react-router-dom';\r\nimport{ login, clearErrors } from '../../actions/userActions';\r\n\r\n\r\nconst Login = ({ history, location }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n       \r\n        if (isAuthenticated) {\r\n            history.push(redirect)\r\n        }   \r\n        if(error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password))\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={'Login'} />\r\n                         <div className=\"row wrapper\"> \r\n\t\t                <div className=\"col-10 col-lg-5\">\r\n                        <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-3\">Login</h1>\r\n                        <div className=\"form-   group\">\r\n                        <label htmlfor=\"email_field\">Email</label>\r\n                        <input\r\n                        type=\"email\"\r\n                        id=\"email_field\"\r\n                        className=\"form-control\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        </div>\r\n  \r\n                        <div className=\"form-group\">\r\n                        <label htmlfor=\"password_field\">Password</label>\r\n                        <input\r\n                         type=\"password\"\r\n                         id=\"password_field\"\r\n                         className=\"form-control\"\r\n                         value={password}\r\n                         onChange={(e) => setPassword(e.target.value)}\r\n                          />\r\n                        </div>\r\n\r\n                         <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\r\n  \r\n                         <button\r\n                         id=\"login_button\"\r\n                         type=\"submit\"\r\n                         className=\"btn btn-block py-3\" \r\n                          >\r\n                         LOGIN\r\n                         </button>\r\n\r\n                         <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\r\n                         </form>\r\n\t\t                  </div>\r\n                         </div>\r\n\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\user\\Profile.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\route\\ProtectedRoute.js",["194"],"import React, { Fragment } from 'react'\r\nimport{ Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n\r\n    const { isAuthenticated, loading, user } = useSelector(state => state.auth)\r\n\r\n    return (\r\n       <Fragment>\r\n           {loading === false && (\r\n               <Route\r\n               {...rest}\r\n               render={props => {\r\n                     if(isAuthenticated === false) {\r\n                    return <Redirect to='/login' />\r\n                   }\r\n                   return <Component {...props} /> \r\n               }}\r\n          />\r\n               )}\r\n       </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute\r\n","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\user\\UpdateProfile.js",["195","196","197"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { register, clearErrors, loadUser, updateProfile } from '../../actions/userActions'\r\nimport { UPDATE_PROFILE_RESET, UPDATE_PROFILE_SUCCESS } from '../../constants/userconstants';\r\n \r\nconst UpdateProfile = ({ history }) => {\r\n   \r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    \r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user }   = useSelector(state => state.auth);\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);  \r\n     \r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('User updated successfully')\r\n            dispatch(loadUser());\r\n\r\n            history.pushState('/me')\r\n\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RESET\r\n            })\r\n        }\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n       \r\n  \r\n\r\n        dispatch(updateProfile(formData))\r\n    }           \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Profile'} />\r\n             <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Name</label>\r\n                            <input \r\n\t\t\t\t\t\t\t\ttype=\"name\" \r\n\t\t\t\t\t\t\t\tid=\"name_field\" \r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\"\r\n                         disabled={loading ? true : false} >Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile\r\n","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\user\\UpdatePassword.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\user\\ForgotPassword.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\user\\NewPassword.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\reducer\\cartReducers.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\cart\\Cart.js",["198","199","200"],"import React, { Fragment } from 'react'\r\nimport Loader from '../layout/Loader';\r\nimport MetaData from '../layout/MetaData';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions';\r\n\r\n\r\nconst Cart = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const {cartItems } = useSelector(state =>  state.cart)\r\n\r\n    const removeCartItemHandler = (id) => {\r\n        dispatch(removeItemFromCart(id))\r\n    }\r\n\r\n    const increaseQty = (id, quantity, stock) => {\r\n        const newQty = quantity + 1;\r\n \r\n        if(newQty > stock) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n    }\r\n    const decreaseQty = (id, quantity) => {\r\n        \r\n        const newQty = quantity - 1;\r\n\r\n        if(newQty <= 0) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n \r\n    } \r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Your Cart'} />\r\n            {cartItems.length ===0 ? <h2 className=\"mt-5\">Your Cart is Empty</h2> : (\r\n                <Fragment>\r\n                      <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\r\n        \r\n        <div className=\"row d-flex justify-content-between\">\r\n            <div className=\"col-12 col-lg-8\"> \r\n               \r\n               {cartItems.map(item => (\r\n                   <Fragment>\r\n                       <hr />\r\n                       <div className=\"cart-item\" key={item.product}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4 col-lg-3\">\r\n                            <img src={item.image} alt=\"Laptop\" height=\"90\" width=\"115\" />\r\n                        </div>\r\n\r\n                        <div className=\"col-5 col-lg-3\">\r\n                            <Link to={`/products/${item.product}`}>{item.name} </Link>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                            <p id=\"card_item_price\">₱{item.price}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                            <div className=\"stockCounter d-inline\">\r\n                                <span className=\"btn btn-danger minus\" onClick={() => decreaseQty(item.product, item.quantity)}>-</span>\r\n                                <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\r\n\r\n\t\t\t\t\t\t\t\t<span className=\"btn btn-primary plus\" onClick={() => increaseQty(item.product, item.quantity, item.stock)}>+</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\r\n                            <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCartItemHandler(item.product)}></i>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                   </Fragment>\r\n               ))}\r\n             \r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-3 my-4\">\r\n                <div id=\"order_summary\">\r\n                    <h4>Order Summary</h4>\r\n                    <hr />\r\n                    <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.\r\n                    reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\r\n                    <p>Est. total: <span className=\"order-summary-values\">₱\r\n                    {cartItems.reduce((acc, item) => (acc + item.quantity * item.price), 0).toFixed(2)}</span></p>\r\n    \r\n                    <hr />\r\n                    <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\r\n                </div>  \r\n            </div>\r\n        </div>\r\n\r\n            </Fragment>\r\n        )} \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Cart","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\cart\\Shipping.js",["201","202"],"import React, { Fragment, useState } from 'react'\r\nimport MetaData from '../layout/MetaData';\r\nimport { countries } from 'countries-list';\r\nimport CheckoutSteps from './CheckoutSteps';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addItemToCart, removeItemFromCart, saveShippingInfo } from '../../actions/cartActions';\r\n\r\nconst Shipping = ({ history }) => {\r\n   \r\n   const countriesList = Object.values(countries)\r\n   \r\n\r\n    const { shippingInfo } = useSelector(state => state.cart)\r\n\r\n    const [address, setAddress] = useState(shippingInfo.address)\r\n    const [city, setCity] = useState(shippingInfo.city)\r\n    const [postalCode, setPostalCode] = useState(shippingInfo.postalCode)\r\n    const [phoneNo, setPhoneNo] = useState(shippingInfo.phoneNo)\r\n    const [country, setCountry] = useState(shippingInfo.country)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(saveShippingInfo({address, city, phoneNo, postalCode, country}))\r\n        history.push('/order/confirm')\r\n    }\r\n    return (\r\n     <Fragment>\r\n         <MetaData title={'Shipping Info'} />\r\n\r\n         <CheckoutSteps shipping />\r\n\r\n         <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-4\">Shipping Info</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"address_field\">Address</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"address_field\"\r\n                                className=\"form-control\"\r\n                                value={address}\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"city_field\">City</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"city_field\"\r\n                                className=\"form-control\"\r\n                                value={city}\r\n                                onChange={(e) => setCity(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"phone_field\">Phone No</label>\r\n                            <input\r\n                                type=\"phone\"\r\n                                id=\"phone_field\"\r\n                                className=\"form-control\"\r\n                                value={phoneNo}\r\n                                onChange={(e) => setPhoneNo(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"postal_code_field\">Postal Code</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                id=\"postal_code_field\"\r\n                                className=\"form-control\"\r\n                                value={postalCode}\r\n                                onChange={(e) => setPostalCode(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"country_field\">Country</label>\r\n                            <select\r\n                                id=\"country_field\"\r\n                                className=\"form-control\"\r\n                                value={country}\r\n                                onChange={(e) => setCountry(e.target.value)}\r\n                                required\r\n                            >\r\n                                  \r\n                                  {countriesList.map(country => (\r\n                                    <option key={country.name} value={country.name}>\r\n                                        {country.name}\r\n                                    </option>\r\n                                         ))}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"shipping_btn\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                        >\r\n                            CONTINUE\r\n                            </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n     </Fragment>\r\n    )\r\n}\r\n\r\nexport default Shipping\r\n","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\cart\\CheckoutSteps.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\cart\\ConfirmOrder.js",["203"],"import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport MetaData from '../layout/MetaData';\r\nimport CheckoutSteps from './CheckoutSteps';\r\nimport { useSelector } from 'react-redux';\r\nimport { saveShippingInfo } from '../../actions/cartActions';\r\n\r\nconst ConfirmOrder = ({ history }) => {\r\n\r\n    const { cartItems, shippingInfo} = useSelector(state => state.cart)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    // Calculate Order Prices\r\n\r\n    const itemsPrice = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0)\r\n    const shippingPrice = itemsPrice > 200 ? 0: 25\r\n    const taxPrice = Number((0.05 * itemsPrice).toFixed(2))\r\n    const totalPrice = (itemsPrice + shippingPrice + taxPrice).toFixed(2)\r\n\r\n    const processToPayment = () => {\r\n        const data = {\r\n            itemsPrice: itemsPrice.toFixed(2),\r\n            shippingPrice,\r\n            taxPrice,\r\n            totalPrice\r\n        }\r\n\r\n        sessionStorage.setItem('orderInfo', JSON.stringify(data))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            \r\n            <MetaData title={'Confirm Order'} />\r\n\r\n            <CheckoutSteps shipping confirmOrder />\r\n\r\n            <div className=\"row d-flex justify-content-between\">\r\n            <div className=\"col-12 col-lg-8 mt-5 order-confirm\">\r\n\r\n                <h4 className=\"mb-3\">Shipping Info</h4>\r\n                <p><b>Name:</b> {user && user.name}</p>\r\n                <p><b>Phone:</b> {shippingInfo.phoneNo}</p>\r\n                <p className=\"mb-4\"><b>Address:</b>{`${shippingInfo.address}, ${shippingInfo.city}, \r\n                ${shippingInfo.postalCode}, ${shippingInfo.country}`}</p>\r\n                \r\n                <hr />\r\n                <h4 className=\"mt-4\">Your Cart Items:</h4>\r\n                    \r\n                    {cartItems.map(item => (\r\n                        <Fragment>\r\n                          \r\n                <hr />\r\n                <div className=\"cart-item my-1\" key={item.product}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4 col-lg-2\">\r\n                            <img src={item.image} alt=\"Laptop\" height=\"45\" width=\"65\" />\r\n                        </div>\r\n\r\n                        <div className=\"col-5 col-lg-6\">\r\n                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-4 col-lg-4 mt-4 mt-lg-0\">\r\n                            <p>{item.quantity} x ₱{item.price} = <b>₱{(item.quantity * item.price).toFixed(2)}</b></p>\r\n                        </div>\r\n\r\n                      </div>\r\n                      </div>\r\n                      <hr />\r\n                      </Fragment>\r\n                        \r\n                    ))}\r\n                    </div>\r\n\t\t\t        \r\n                    <div className=\"col-12 col-lg-3 my-4\">\r\n                    <div id=\"order_summary\">\r\n                        <h4>Order Summary</h4>\r\n                        <hr />\r\n                        <p>Subtotal:  <span className=\"order-summary-values\">₱{itemsPrice}</span></p>\r\n                        <p>Shipping: <span className=\"order-summary-values\">₱{shippingPrice}</span></p>\r\n                        <p>Tax:  <span className=\"order-summary-values\">₱{taxPrice}</span></p>\r\n\r\n                        <hr />\r\n\r\n                        <p>Total: <span className=\"order-summary-values\">₱{totalPrice}</span></p>\r\n\r\n                        <hr />\r\n                        <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" \r\n                        onClick={processToPayment}>Proceed to Payment</button>\r\n                    </div>\r\n                </div>\r\n\t\t\t\r\n\t\t\t\r\n        </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ConfirmOrder\r\n","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\cart\\Payment.js",["204"],"import React, { Fragment, StrictMode, useEffect } from 'react'\r\nimport MetaData from '../layout/MetaData';\r\nimport { useAlert } from 'react-alert'\r\nimport CheckoutSteps from './CheckoutSteps';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport{ createOrder, clearErrors } from '../../actions/orderActions';\r\nimport { useStripe, useElements, CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js'\r\nimport axios from 'axios';\r\n\r\n\r\nconst options = {\r\n    style: {\r\n        base: {\r\n            fontsize: '16px'\r\n        },\r\n        invalid: {\r\n            color: '#9e2146'\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst Payment = ({ history }) => {\r\n    const alert = useAlert();\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const dispatch = useDispatch();\r\n    \r\n    const { user } = useSelector(state => state.auth)\r\n    const { cartItems, shippingInfo } = useSelector(state => state.cart);\r\n    const { error } = useSelector(state => state.newOrder)\r\n\r\n    useEffect(() => {\r\n\r\n        if(error) {\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    },[dispatch, alert, error]) \r\n\r\n    const order = {\r\n        orderItems: cartItems,\r\n        shippingInfo\r\n    }\r\n\r\n    const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'));\r\n    if(orderInfo) {\r\n        order.itemsPrice = orderInfo.itemsPrice\r\n        order.shippingPrice = orderInfo.shippingPrice\r\n        order.taxPrice = orderInfo.taxPrice\r\n        order.totalPrice = orderInfo.totalPrice\r\n    }\r\n\r\n    const paymentData = {\r\n        amount: Math.round(orderInfo.totalPrice * 100)\r\n    }\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        document.querySelector('#pay_btn').disabled = true;\r\n\r\n        let res;\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n            \r\n            res = await axios.post('/api/v1/payment/process', paymentData, config)\r\n\r\n            const clientSecret = res.data.client_secret;\r\n\r\n            if(!stripe || !elements) {\r\n                return;\r\n            }\r\n\r\n            const result = await stripe.confirmCardPayment(clientSecret, {\r\n                payment_method: {\r\n                    card: elements.getElement(CardNumberElement),\r\n                    billing_details: {\r\n                        name: user.name,\r\n                        email: user.email\r\n                    }\r\n                }\r\n            });\r\n\r\n            if(result.error) {\r\n                alert.error(result.error.message);\r\n                document.querySelector('#pay_btn').disabled = false;      \r\n            }else {\r\n               \r\n                 // the payment is processed or not\r\n                if(result.paymentIntent.status === 'succeeded') {\r\n\r\n                    order.paymentInfo = {\r\n                        id: result.paymentIntent.id,\r\n                        status: result.paymentIntent.status\r\n                    }\r\n                    dispatch(createOrder(order))\r\n\r\n                    history.push('/success')\r\n                } else {\r\n                    alert.error('there is  some issue while payment processing')\r\n                }\r\n            }\r\n        \r\n        } catch (error) {\r\n            document.querySelector('#pay_btn').disabled = false;\r\n            alert.error(error.response.data.message)\r\n        \r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Payment'} />  \r\n            <CheckoutSteps shipping confirmOrder payment />\r\n           \r\n            <div className=\"row wrapper\">\r\n\t\t<div className=\"col-10 col-lg-5\">\r\n            <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                <h1 className=\"mb-4\">Card Info</h1>\r\n                <div className=\"form-group\">    \r\n                  <label htmlFor=\"card_num_field\">Card Number</label>\r\n                  <CardNumberElement\r\n                    type=\"text\"\r\n                    id=\"card_num_field\"\r\n                    className=\"form-control\"\r\n                    options={options}\r\n                  />\r\n                </div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"form-group\">\r\n                  <label htmlFor=\"card_exp_field\">Card Expiry</label>\r\n                  <CardExpiryElement\r\n                    type=\"text\"\r\n                    id=\"card_exp_field\"\r\n                    className=\"form-control\"\r\n                    options={options}\r\n                  />\r\n                </div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"form-group\">\r\n                  <label htmlFor=\"card_cvc_field\">Card CVC</label>\r\n                  <CardCvcElement\r\n                    type=\"text\"\r\n                    id=\"card_cvc_field\"\r\n                    className=\"form-control\"\r\n                    options={options}\r\n                  />\r\n                </div>\r\n                <button\r\n                  id=\"pay_btn\"\r\n                  type=\"submit\"\r\n                  className=\"btn btn-block py-3\"\r\n                  options={options}\r\n                >\r\n                  Pay {` - ${orderInfo && orderInfo.totalPrice}`}\r\n                </button>\r\n    \r\n              </form>\r\n\t\t\t  </div>\r\n        </div>\r\n          \r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\reducer\\orderReducers.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\user\\Desktop\\project011621\\frontend\\src\\components\\order\\ListOrders.js",[],{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":23,"column":10,"nodeType":"211","messageId":"212","endLine":23,"endColumn":21},{"ruleId":"213","severity":1,"message":"214","line":32,"column":12,"nodeType":"215","endLine":32,"endColumn":44},{"ruleId":"209","severity":1,"message":"216","line":3,"column":23,"nodeType":"211","messageId":"212","endLine":3,"endColumn":34},{"ruleId":"217","severity":2,"message":"218","line":8,"column":21,"nodeType":"211","endLine":8,"endColumn":32},{"ruleId":"217","severity":2,"message":"219","line":10,"column":3,"nodeType":"211","endLine":10,"endColumn":12},{"ruleId":"213","severity":1,"message":"214","line":23,"column":13,"nodeType":"215","endLine":26,"endColumn":15},{"ruleId":"220","severity":1,"message":"221","line":29,"column":17,"nodeType":"215","endLine":29,"endColumn":28},{"ruleId":"220","severity":1,"message":"221","line":38,"column":15,"nodeType":"215","endLine":38,"endColumn":67},{"ruleId":"209","severity":1,"message":"222","line":16,"column":18,"nodeType":"211","messageId":"212","endLine":16,"endColumn":27},{"ruleId":"213","severity":1,"message":"214","line":10,"column":12,"nodeType":"215","endLine":13,"endColumn":14},{"ruleId":"209","severity":1,"message":"223","line":13,"column":5,"nodeType":"211","messageId":"212","endLine":13,"endColumn":28},{"ruleId":"209","severity":1,"message":"224","line":14,"column":5,"nodeType":"211","messageId":"212","endLine":14,"endColumn":26},{"ruleId":"209","severity":1,"message":"225","line":15,"column":5,"nodeType":"211","messageId":"212","endLine":15,"endColumn":25},{"ruleId":"209","severity":1,"message":"226","line":25,"column":5,"nodeType":"211","messageId":"212","endLine":25,"endColumn":25},{"ruleId":"209","severity":1,"message":"227","line":27,"column":5,"nodeType":"211","messageId":"212","endLine":27,"endColumn":16},{"ruleId":"209","severity":1,"message":"228","line":217,"column":17,"nodeType":"211","messageId":"212","endLine":217,"endColumn":21},{"ruleId":"229","severity":1,"message":"230","line":31,"column":8,"nodeType":"231","endLine":31,"endColumn":58,"suggestions":"232"},{"ruleId":"209","severity":1,"message":"233","line":8,"column":39,"nodeType":"211","messageId":"212","endLine":8,"endColumn":43},{"ruleId":"209","severity":1,"message":"234","line":5,"column":10,"nodeType":"211","messageId":"212","endLine":5,"endColumn":18},{"ruleId":"209","severity":1,"message":"235","line":6,"column":32,"nodeType":"211","messageId":"212","endLine":6,"endColumn":54},{"ruleId":"229","severity":1,"message":"236","line":41,"column":8,"nodeType":"231","endLine":41,"endColumn":52,"suggestions":"237"},{"ruleId":"209","severity":1,"message":"238","line":2,"column":8,"nodeType":"211","messageId":"212","endLine":2,"endColumn":14},{"ruleId":"209","severity":1,"message":"239","line":4,"column":10,"nodeType":"211","messageId":"212","endLine":4,"endColumn":18},{"ruleId":"240","severity":1,"message":"241","line":93,"column":84,"nodeType":"242","messageId":"243","endLine":93,"endColumn":85,"fix":"244"},{"ruleId":"209","severity":1,"message":"245","line":6,"column":10,"nodeType":"211","messageId":"212","endLine":6,"endColumn":23},{"ruleId":"209","severity":1,"message":"246","line":6,"column":25,"nodeType":"211","messageId":"212","endLine":6,"endColumn":43},{"ruleId":"209","severity":1,"message":"247","line":6,"column":10,"nodeType":"211","messageId":"212","endLine":6,"endColumn":26},{"ruleId":"209","severity":1,"message":"248","line":1,"column":27,"nodeType":"211","messageId":"212","endLine":1,"endColumn":37},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useSelector' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useDispatch\" is called in function \"home\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useEffect\" is called in function \"home\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setRating' is assigned a value but never used.","'UPDATE_PASSWORD_SUCCESS' is defined but never used.","'UPDATE_PASSWORD_RESET' is defined but never used.","'UPDATE_PASSWORD_FAIL' is defined but never used.","'UPDATE_PROFILE_RESET' is defined but never used.","'LOGOUT_FAIL' is defined but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.","ArrayExpression",["251"],"'user' is assigned a value but never used.","'register' is defined but never used.","'UPDATE_PROFILE_SUCCESS' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["252"],"'Loader' is defined but never used.","'useAlert' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"253","text":"254"},"'addItemToCart' is defined but never used.","'removeItemFromCart' is defined but never used.","'saveShippingInfo' is defined but never used.","'StrictMode' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},[3504,3527],"\r\n                    .","Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect]",{"range":"259","text":"260"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"261","text":"262"},[956,1006],"[dispatch, alert, isAuthenticated, error, history, redirect]",[1237,1281],"[dispatch, alert, error, history, isUpdated, user]"]